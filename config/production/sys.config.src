[
  
  {erl_template, [

    {cowboy_trans_opts, [
      {port,            8001},
      {ack_timeout,     2000},  
      {num_acceptors,   1}, 
      {max_connections, 130000}
    ]},

    {api_rules,         "lib/erl_template-0.1.0/priv/api_rules"},

    {debug,             true},
    {test_env,          false}

  ]},

  {sasl_error_logger, []},

  {lager, [
    {log_root, "log"},
    %% What handlers to install with what arguments
    {handlers, [
      {lager_console_backend, [{level, info}]},
      {lager_file_backend, [{file, "info.log"},  {level, info}, {size, 20048576000}, {date, "$D0"}, {count, 15}]},
      {lager_file_backend, [{file, "error.log"}, {level, warning}, {size, 20048576000}, {date, "$D0"}, {count, 15}]}
    ]},
    %% Note: application:start(lager) overwrites previously defined environment variables
    %%       thus declaration of default handlers is done at lager_app.erl
    %% What colors to use with what log levels
    {colored, false},
    {colors, [
      {debug,     "\e[0;38m" },
      {info,      "\e[1;37m" },
      {notice,    "\e[1;36m" },
      {warning,   "\e[1;33m" },
      {error,     "\e[1;31m" },
      {critical,  "\e[1;35m" },
      {alert,     "\e[1;44m" },
      {emergency, "\e[1;41m" }
    ]},
    %% Whether to write a crash log, and where. Undefined means no crash logger.
    {crash_log, "crash.log"},
    %% Maximum size in bytes of events in the crash log - defaults to 65536
    {crash_log_msg_size, 65536},
    %% Maximum size of the crash log in bytes, before its rotated, set
    %% to 0 to disable rotation - default is 0
    {crash_log_size, 10485760},
    %% What time to rotate the crash log - default is no time
    %% rotation. See the README for a description of this format.
    {crash_log_date, "$D0"},
    %% Number of rotated crash logs to keep, 0 means keep only the
    %% current one - default is 0
    {crash_log_count, 5},
    %% Whether to redirect error_logger messages into the default lager_event sink - defaults to true
    {error_logger_redirect, false},
    %% How many messages per second to allow from error_logger before we start dropping them
    {error_logger_hwm, 50},
    %% How big the gen_event mailbox can get before it is
    %% switched into sync mode.  This value only applies to
    %% the default sink; extra sinks can supply their own.
    {async_threshold, 30000},
    %% Switch back to async mode, when gen_event mailbox size
    %% decrease from `async_threshold' to async_threshold -
    %% async_threshold_window. This value only applies to the
    %% default sink; extra sinks can supply their own.
    {async_threshold_window, 50}
  ]}

].
